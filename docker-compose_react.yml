services:
  # Backend Django API Service
  backend:

    build: ./backend # Path to the backend Dockerfile
    container_name: mill_dash_backend
    command: >
      sh -c "PYTHONPATH=/app uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./backend/:/app/ # Mounts the local code into the container for live-reloading
      - ./data/:/app/data/ # Mounts the local data directory into the container
    ports:
      - "8000:8000" # Exposes port 8000 to host machine
    env_file:
      - ./.env # Loads environment variables from the .env file
    depends_on:
      db: # Ensures the database is started and healthy before the backend
        condition: service_healthy


  # Frontend React Service
  frontend:
    build: ./frontend # Path to the frontend Dockerfile
    container_name: mill_dash_frontend
    ports:
      - "3000:80" # Exposes the React dev server port
    stdin_open: true
    tty: true

  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine # Use the official PostgreSQL image
    container_name: mill_dash_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Persists database data
    env_file:
      - ./.env # Loads database credentials from the .env file
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  ingestor:
    build: ./backend
    container_name: mill_dash_ingestor
    command: bash -c "PYTHONPATH=/app python /app/ingestor.py"
    volumes:
      - ./backend/:/app/
      - ./data/:/app/data/
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data: # Defines the named volume for data persistence